"""Add PlayEventTable

Revision ID: 0e83e4bdee98
Revises: a3928e9a326e
Create Date: 2025-04-29 20:45:09.201123

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0e83e4bdee98'
down_revision: Union[str, None] = 'a3928e9a326e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('play_events',
    sa.Column('play_id', sa.UUID(), nullable=True),
    sa.Column('team_id', sa.UUID(), nullable=True),
    sa.Column('question_id', sa.UUID(), nullable=True),
    sa.Column('typename', sa.String(), nullable=True),
    sa.Column('money', sa.Integer(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_play_events')),
    sa.UniqueConstraint('id', name=op.f('uq_play_events_id'))
    )
    op.create_unique_constraint(op.f('uq_teams_id'), 'teams', ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('uq_teams_id'), 'teams', type_='unique')
    op.drop_table('play_events')
    # ### end Alembic commands ###
